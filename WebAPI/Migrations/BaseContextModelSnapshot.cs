// <auto-generated />
using System;
using Base;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Base.Migrations
{
    [DbContext(typeof(BaseContext))]
    partial class BaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Setia.Models.AuditModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Audit");
                });

            modelBuilder.Entity("Setia.Models.PontajModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AuthorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BeginTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("UserId");

                    b.ToTable("Pontaj");
                });

            modelBuilder.Entity("Setia.Models.TagModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AuthorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentTagId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ParentTagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3939b0a5-ac95-418a-9b1c-f4ef8069d66a"),
                            Active = true,
                            Deleted = false,
                            ExecutionDate = new DateTime(2024, 4, 11, 0, 19, 59, 464, DateTimeKind.Local).AddTicks(4346),
                            Name = "Helper"
                        },
                        new
                        {
                            Id = new Guid("69170a16-b595-4d84-bab6-0158d86f3852"),
                            Active = true,
                            Deleted = false,
                            ExecutionDate = new DateTime(2024, 4, 11, 0, 19, 59, 464, DateTimeKind.Local).AddTicks(4391),
                            Name = "Upload",
                            ParentTagId = new Guid("3939b0a5-ac95-418a-9b1c-f4ef8069d66a")
                        },
                        new
                        {
                            Id = new Guid("ea544fcc-b71a-4aaf-856b-c5ca97d5973a"),
                            Active = true,
                            Deleted = false,
                            ExecutionDate = new DateTime(2024, 4, 11, 0, 19, 59, 464, DateTimeKind.Local).AddTicks(4460),
                            Name = "Pontaj"
                        },
                        new
                        {
                            Id = new Guid("61758a3b-c8c2-4681-a832-4b76e5a56934"),
                            Active = true,
                            Deleted = false,
                            ExecutionDate = new DateTime(2024, 4, 11, 0, 19, 59, 464, DateTimeKind.Local).AddTicks(4519),
                            Name = "Tags"
                        },
                        new
                        {
                            Id = new Guid("75cdcab4-22b9-423c-834f-acaffd2f7592"),
                            Active = true,
                            Deleted = false,
                            ExecutionDate = new DateTime(2024, 4, 11, 0, 19, 59, 464, DateTimeKind.Local).AddTicks(4576),
                            Name = "Users"
                        },
                        new
                        {
                            Id = new Guid("9f507e3b-aa56-4fb7-b40a-795480c3a584"),
                            Active = true,
                            Deleted = false,
                            ExecutionDate = new DateTime(2024, 4, 11, 0, 19, 59, 464, DateTimeKind.Local).AddTicks(4653),
                            Name = "UserTags"
                        },
                        new
                        {
                            Id = new Guid("71c45523-ec17-4559-9540-4db4168a4243"),
                            Active = true,
                            Deleted = false,
                            ExecutionDate = new DateTime(2024, 4, 11, 0, 19, 59, 464, DateTimeKind.Local).AddTicks(4709),
                            Name = "CRUD`1"
                        },
                        new
                        {
                            Id = new Guid("8064bc03-6a27-43ee-9f29-5316d341a5f1"),
                            Active = true,
                            Deleted = false,
                            ExecutionDate = new DateTime(2024, 4, 11, 0, 19, 59, 464, DateTimeKind.Local).AddTicks(4773),
                            Name = "Get",
                            ParentTagId = new Guid("71c45523-ec17-4559-9540-4db4168a4243")
                        },
                        new
                        {
                            Id = new Guid("1376ba52-5094-4604-ae20-93e7857ffaf6"),
                            Active = true,
                            Deleted = false,
                            ExecutionDate = new DateTime(2024, 4, 11, 0, 19, 59, 464, DateTimeKind.Local).AddTicks(4782),
                            Name = "Add",
                            ParentTagId = new Guid("71c45523-ec17-4559-9540-4db4168a4243")
                        },
                        new
                        {
                            Id = new Guid("36c1feee-8870-421d-9df9-2ca2dcc27711"),
                            Active = true,
                            Deleted = false,
                            ExecutionDate = new DateTime(2024, 4, 11, 0, 19, 59, 464, DateTimeKind.Local).AddTicks(4791),
                            Name = "Update",
                            ParentTagId = new Guid("71c45523-ec17-4559-9540-4db4168a4243")
                        },
                        new
                        {
                            Id = new Guid("c5c1750e-bbe1-46e2-a062-12fcab5ddc33"),
                            Active = true,
                            Deleted = false,
                            ExecutionDate = new DateTime(2024, 4, 11, 0, 19, 59, 464, DateTimeKind.Local).AddTicks(4801),
                            Name = "Delete",
                            ParentTagId = new Guid("71c45523-ec17-4559-9540-4db4168a4243")
                        });
                });

            modelBuilder.Entity("Setia.Models.UserModel", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AuthorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.HasIndex("AuthorId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Username = "testUsername",
                            Active = true,
                            Deleted = false,
                            Email = "",
                            ExecutionDate = new DateTime(2024, 4, 11, 0, 19, 59, 464, DateTimeKind.Local).AddTicks(4068),
                            Name = "Test Name",
                            Password = "testPassword"
                        });
                });

            modelBuilder.Entity("Setia.Models.UserTagModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AuthorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ExecutionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Tag")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("UserTags");
                });

            modelBuilder.Entity("Setia.Models.AuditModel", b =>
                {
                    b.HasOne("Setia.Models.UserModel", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Setia.Models.PontajModel", b =>
                {
                    b.HasOne("Setia.Models.UserModel", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("Setia.Models.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Author");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Setia.Models.TagModel", b =>
                {
                    b.HasOne("Setia.Models.UserModel", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("Setia.Models.TagModel", "ParentTag")
                        .WithMany()
                        .HasForeignKey("ParentTagId");

                    b.Navigation("Author");

                    b.Navigation("ParentTag");
                });

            modelBuilder.Entity("Setia.Models.UserModel", b =>
                {
                    b.HasOne("Setia.Models.UserModel", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Setia.Models.UserTagModel", b =>
                {
                    b.HasOne("Setia.Models.UserModel", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
